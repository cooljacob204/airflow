apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: airflow-web
  labels:
    app: airflow-web
spec:
  selector:
    matchLabels:
      app: airflow-web
  template:
    metadata:
      labels:
        app: airflow-web
        name: airflow
    spec:
      containers:
      - image: cooljacob204/airflow
        name: airflow-web
        env:
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres
        - name: AIRFLOW__WEBSERVER__AUTHENTICATE
          value: "True"
        - name: AIRFLOW__WEBSERVER__AUTH_BACKEND
          value: "airflow.contrib.auth.backends.password_auth"
        command: ["airflow"]
        args: ["webserver"]
        ports:
        - containerPort: 8080
          name: airflow-web
        volumeMounts:
        - mountPath: "/usr/local/airflow/dags"
          name: airflow-volume
      hostname: airflow-web
      subdomain: airflow
      volumes:
      - name: airflow-volume
        persistentVolumeClaim:
          claimName: airflow
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: airflow-sched
  labels:
    app: airflow-sched
spec:
  selector:
    matchLabels:
      app: airflow-sched
  template:
    metadata:
      labels:
        app: airflow-sched
        name: airflow
    spec:
      containers:
      - image: cooljacob204/airflow
        name: airflow-sched
        env:
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres
        command: ["airflow"]
        args: ["scheduler"]
        volumeMounts:
        - mountPath: "/usr/local/airflow/dags"
          name: airflow-volume
      hostname: airflow-sched
      subdomain: airflow
      volumes:
      - name: airflow-volume
        persistentVolumeClaim:
          claimName: airflow
    